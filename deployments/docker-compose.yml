version: "2.4"

services:

  client:
    build:
      context: ./dockerfiles
      dockerfile: client
    image: goipsec-client
    container_name: client
    mac_address: "02:42:ac:11:00:10"
    stop_grace_period: 10s
    cap_add:
      - ALL
    depends_on:
      - vpn-gateway
    volumes:
      - /home/bogdan/.go/src/goipsec/deployments/logs/client.pcap:/client.pcap
    command: bash -c '(tcpdump -w /client.pcap &) &&
      ip -6 route add 2001:db8:23:42:1::40/128 via 2001:db8:23:42:1::20 &&
      sleep 5 &&
      curl web-server --local-port 6666 -s -m 5 -6 -w %{time_total}; sleep 20'
    # command: bash -c '(tcpdump -w /client.pcap &) &&
    #                   sleep 5 &&
    #                   curl web-server --local-port 6666 -s -m 5 -6; sleep 10'
    networks:
      default:
        ipv4_address: "173.17.17.10"
        ipv6_address: "2001:db8:23:42:1::10"

  vpn-gateway:
    build:
      context: ./dockerfiles
      dockerfile: client-vpn
    image: goipsec-client-vpn
    container_name: client-gateway
    mac_address: "02:42:ac:11:00:20"
    stop_grace_period: 10s
    environment:
      - GOIPSEC_KEY=passwordddpasswordddpassworddddd
      - XDG_CONFIG_HOME=/root/.config
    depends_on:
      vpn-server:
        condition: service_healthy
    sysctls:
      - net.ipv6.conf.all.forwarding=0
    cap_add:
      - ALL
    volumes:
      - /home/bogdan/.go/src/goipsec:/go/src/goipsec
    command: bash -c '(tcpdump -w /go/src/goipsec/deployments/logs/vpn-gateway.pcap &) &&
      ip6tables -I FORWARD -p tcp --dport 80 -s 2001:db8:23:42:1::10 -j DROP &&
      ip6tables -I OUTPUT -p ipv6-icmp --icmpv6-type 1/4 -j DROP && 
      /go/src/goipsec/cmd/ipsec/main'
    networks:
      default:
        ipv4_address: "173.17.17.20"
        ipv6_address: "2001:db8:23:42:1::20"

  vpn-server:
    build:
      context: ./dockerfiles
      dockerfile: server-vpn
    image: goipsec-server-vpn
    container_name: vpn-server
    mac_address: "02:42:ac:11:00:30"
    stop_grace_period: 10s
    environment:
      - GOIPSEC_KEY=passwordddpasswordddpassworddddd
      - XDG_CONFIG_HOME=/root/.config
    depends_on:
      - web-server
    cap_add:
      - ALL
    volumes:
      - /home/bogdan/.go/src/goipsec:/go/src/goipsec
    command: bash -c '(tcpdump -w /go/src/goipsec/deployments/logs/vpn-server.pcap &) &&
      ip6tables -I OUTPUT -p tcp --tcp-flags RST RST -j DROP &&
      ip6tables -I OUTPUT -p ipv6-icmp --icmpv6-type 1/4 -j DROP &&
      rm -f /go/src/goipsec/cmd/ipsec/main &&
      cd /go/src/goipsec/cmd/ipsec/ &&
      go build main.go &&
      ./main'
    healthcheck:
      test: ["CMD-SHELL", "test -f /go/src/goipsec/cmd/ipsec/main"]
      interval: 2s
      timeout: 3s
      retries: 3
    networks:
      default:
        ipv4_address: "173.17.17.30"
        ipv6_address: "2001:db8:23:42:1::30"

  web-server:
    build:
      context: ./dockerfiles
      dockerfile: web-server
    image: goipsec-web-server
    container_name: web-server
    mac_address: "02:42:ac:11:00:40"
    stop_grace_period: 10s
    cap_add:
      - ALL
    volumes:
      - /home/bogdan/.go/src/goipsec/deployments/logs/web-server.pcap:/web-server.pcap
    command: sh -c 'nginx && tcpdump -w /web-server.pcap'
    networks:
      default:
        ipv4_address: "173.17.17.40"
        ipv6_address: "2001:db8:23:42:1::40"

networks:
  default:
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "173.17.17.0/24"
        - subnet: "2001:db8:23:42:1::/80"