version: "2.4"

services:

  client:
    build:
      context: ./dockerfiles
      dockerfile: client
    image: goipsec-tcp-client
    container_name: goipsec-tcp-client
    mac_address: "02:42:ac:11:00:10"
    stop_grace_period: 10s
    cap_add:
      - ALL
    depends_on:
      - goipsec-client
    volumes:
      - ./logs/tcp/client.pcap:/client.pcap
    command: bash -c '(tcpdump -U -w /client.pcap &) &&
      ip -6 route add 2001:db8:23:42:1::40/128 via 2001:db8:23:42:1::20 &&
      sleep 5 &&
      curl goipsec-tcp-server --local-port 5555 -s -m 5 -6 -w %{time_total}; sleep 10'
    networks:
      default:
        ipv4_address: "173.17.17.10"
        ipv6_address: "2001:db8:23:42:1::10"

  goipsec-client:
    build:
      context: ./dockerfiles
      dockerfile: goipsec-client
    image: goipsec-gateway-client
    container_name: goipsec-gateway-client
    mac_address: "02:42:ac:11:00:20"
    stop_grace_period: 10s
    environment:
      - GOIPSEC_KEY=passwordddpasswordddpassworddddd
      - XDG_CONFIG_HOME=/root/.config
    depends_on:
      goipsec-server:
        condition: service_healthy
    sysctls:
      - net.ipv6.conf.all.forwarding=0
    cap_add:
      - ALL
    volumes:
      - ../../goipsec:/go/src/github.com/BogdanIonesq/goipsec
    command: bash -c '(tcpdump -U -w /go/src/github.com/BogdanIonesq/goipsec/deployments/logs/tcp/client-gateway.pcap &) &&
      ip6tables -I FORWARD -p tcp --dport 80 -s 2001:db8:23:42:1::10 -j DROP &&
      ip6tables -I OUTPUT -p ipv6-icmp --icmpv6-type 1/4 -j DROP && 
      /go/src/github.com/BogdanIonesq/goipsec/cmd/goipsec/main'
    networks:
      default:
        ipv4_address: "173.17.17.20"
        ipv6_address: "2001:db8:23:42:1::20"

  goipsec-server:
    build:
      context: ./dockerfiles
      dockerfile: goipsec-server
    image: goipsec-gateway-server
    container_name: goipsec-gateway-server
    mac_address: "02:42:ac:11:00:30"
    stop_grace_period: 10s
    environment:
      - GOIPSEC_KEY=passwordddpasswordddpassworddddd
      - XDG_CONFIG_HOME=/root/.config
    depends_on:
      - server
    cap_add:
      - ALL
    volumes:
      - ../../goipsec:/go/src/github.com/BogdanIonesq/goipsec
    command: bash -c 'ip route del default &&
      ip route add default via 173.17.17.99 &&
      ip -6 route del default &&
      ip -6 route add default via 2001:db8:23:42:1::99 &&
      (tcpdump -U -w /go/src/github.com/BogdanIonesq/goipsec/deployments/logs/tcp/server-gateway.pcap &) &&
      ip6tables -I OUTPUT -p tcp --tcp-flags RST RST -j DROP &&
      ip6tables -I OUTPUT -p ipv6-icmp --icmpv6-type 1/4 -j DROP &&
      rm -f /go/src/github.com/BogdanIonesq/goipsec/cmd/goipsec/main &&
      cd /go/src/github.com/BogdanIonesq/goipsec/cmd/goipsec/ &&
      go build main.go &&
      ./main'
    healthcheck:
      test: ["CMD-SHELL", "test -f /go/src/github.com/BogdanIonesq/goipsec/cmd/goipsec/main"]
      interval: 2s
      timeout: 3s
      retries: 3
    networks:
      default:
        ipv4_address: "173.17.17.30"
        ipv6_address: "2001:db8:23:42:1::30"

  server:
    build:
      context: ./dockerfiles
      dockerfile: server
    image: goipsec-tcp-server
    container_name: goipsec-tcp-server
    mac_address: "02:42:ac:11:00:40"
    stop_grace_period: 10s
    depends_on:
      - router
    cap_add:
      - ALL
    volumes:
      - ./logs/tcp/server.pcap:/server.pcap
    command: sh -c 'nginx && tcpdump -U -w /server.pcap'
    networks:
      default:
        ipv4_address: "173.17.17.40"
        ipv6_address: "2001:db8:23:42:1::40"

  router:
    build:
      context: ./dockerfiles
      dockerfile: client
    container_name: router
    mac_address: "02:42:ac:11:00:99"
    cap_add:
      - ALL
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    command: bash -c 'ip6tables -I OUTPUT -p ipv6-icmp --icmpv6-type redirect -j DROP && sleep 2147483647'
    networks:
      default:
        ipv4_address: "173.17.17.99"
        ipv6_address: "2001:db8:23:42:1::99"

networks:
  default:
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: "173.17.17.0/24"
        - subnet: "2001:db8:23:42:1::/80"